---
swagger: "2.0"
info:
  description: Przykładowe API Pogodowe do projektu Inżynieria Internetu 2019/2020 z uwierzytelnianiem
  version: 1.0.0
  title: WeatherReady app
  contact:
    name: Samuel Ozimina
    email: samuel.ozimina@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
basePath: /api/v1
schemes:
- http
- https
consumes:
- application/json
produces:
- application/json
paths:
  /user/login:
    post:
      tags:
      - user
      summary: User Authentication returning a JWT.
      description: Authenticate a user.
      parameters: []
      responses:
        "200":
          description: Successfully authorized. Will send user info and token.
          schema:
            $ref: '#/definitions/user'
        "401":
          description: Wrong username or password
      security:
      - BasicAuth: []
  /chest:
    get:
      tags:
      - chest
      operationId: getClothes
      parameters:
      - name: name
        in: query
        description: Find clothes that contain a name of type ex. pants
        required: false
        type: string
      responses:
        "200":
          description: list all clothes
          schema:
            type: array
            items:
              $ref: '#/definitions/equipment'
    post:
      tags:
      - chest
      operationId: addEquipment
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/equipment'
      responses:
        "201":
          description: Create new equipment
          schema:
            $ref: '#/definitions/equipment'
        "400":
          description: Missing or invalid data
        "401":
          description: Unauthorized
        "409":
          description: Category with the same name already exists
      security:
      - JWT: []
  /chest/{id}:
    get:
      tags:
      - chest
      operationId: getEquimpment
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/equipment'
        "404":
          description: Equipment not found
    put:
      tags:
      - chest
      operationId: updateEquipment
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/equipment'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/equipment'
        "400":
          description: Missing or invalid data
        "401":
          description: Unauthorized
        "404":
          description: Category not found
        "409":
          description: Category with the same name already exists
      security:
      - JWT: []
    delete:
      tags:
      - chest
      operationId: destroyEquipment
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "204":
          description: Deleted
        "401":
          description: Unauthorized
        "404":
          description: Category not found
      security:
      - JWT: []
  /trips:
    get:
      tags:
      - trips
      operationId: getTrips
      parameters:
      - name: localization
        in: query
        description: Find trips by localization
        required: false
        type: string
      responses:
        "200":
          description: list trips
          schema:
            type: array
            items:
              $ref: '#/definitions/trip'
    post:
      tags:
      - chest
      operationId: addTrip
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/trip'
      responses:
        "201":
          description: Create new trip
          schema:
            $ref: '#/definitions/trip'
        "400":
          description: Missing or invalid data
        "401":
          description: Unauthorized
        "409":
          description: Category with the same name already exists
      security:
      - JWT: []
  /trips/{id}:
    get:
      tags:
      - trips
      operationId: getTrip
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trip'
        "404":
          description: Trip not found
    put:
      tags:
      - trips
      operationId: updateTrip
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/trip'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trip'
        "400":
          description: Missing or invalid data
        "401":
          description: Unauthorized
        "404":
          description: Trip not found
        "409":
          description: Trip with the same name already exists
      security:
      - JWT: []
    delete:
      tags:
      - trips
      operationId: removeTrip
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        "204":
          description: Deleted
        "401":
          description: Unauthorized
        "404":
          description: Trip not found
      security:
      - JWT: []
securityDefinitions:
  BasicAuth:
    type: basic
  JWT:
    type: apiKey
    name: Authorization
    in: header
definitions:
  user:
    type: object
    properties:
      token:
        type: string
        readOnly: true
      userInfo:
        $ref: '#/definitions/user_userInfo'
  equipment:
    type: object
    required:
    - heat
    - name
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      name:
        type: string
        minLength: 1
      description:
        type: string
        minLength: 1
      heat:
        type: integer
  weather:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      localization:
        $ref: '#/definitions/trip/properties/localization'
      title:
        type: string
        minLength: 1
      min_temp:
        type: integer
      wind:
        type: integer
      date:
        type: string
        format: date
  trip:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      title:
        type: string
        minLength: 1
      localization:
        type: string
        minLength: 1
      max_attitiude:
        type: integer
  user_userInfo:
    type: object
    properties:
      name:
        type: string
